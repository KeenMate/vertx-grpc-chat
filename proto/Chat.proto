syntax = "proto3";

option java_multiple_files = true;
option java_package = "com.keenmate.chat";
option java_outer_classname = "ChatProto";
option objc_class_prefix = "HLW";

package com.keenmate.chat;

import "Common.proto";
import "User.proto";

service ChatProvider {
	rpc CreateRoom (NewRoomRequest) returns (Room);
	rpc JoinRoom (JoinRoomRequest) returns (Status);
	rpc RemoveRoom (Room) returns (Status);
	rpc SendMessage (Message) returns (Status);

	rpc Listen (StringMessage) returns (stream ChatEvent);
	// rpc GetRooms (Empty) returns (stream Room);
	// rpc GetMessages (StringMessage) returns (stream ChatChangeData);

	// todo: Ability to send/receive invitations (for private rooms (p2p communication))
}

message ChatEvent {
	oneof value {
		Room room = 1;
		User user = 2;
		Message message = 3;
	}
	
	// only this prop will be set on DeletedRoom event (not whole room in oneof value...) 
	// set manually value case
	int32 roomId = 5;
	
	TheChange change = 4;
}

message NewRoomRequest {
	string title = 1;
	bool private = 2;
	string creatorGuid = 3;
}

message JoinRoomRequest {
	int32 roomId = 1;
	string userGuid = 2;
}

message Room {
	int32 roomId = 1;
	string title = 2;
	/*
		whether the room is intended for just p2p communication
		todo: how to inform target user that invitation came? - maybe another server-stream
		todo: accept/reject capabilities
	*/
	bool private = 3;
	User creator = 4;
}

message Message {
	int32 messageId = 1;
	string creatorGuid = 2;
	reserved 3;
	int32 roomId = 4;
	string content = 5;
	// date when the message arrives at server (generated by server)
	int64 sent = 6;
}
